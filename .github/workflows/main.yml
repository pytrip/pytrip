name: Python tests and packaging

on:
  push:
    branches: [ master ]
    tags: ['*']
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]

jobs:

  initialise:
    # code adopted from https://github.community/t/accessing-commit-message-in-pull-request-event/17158
    # extracts commit message from last commit, so it is available in further stages of build process
    name: "Extract commit message"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 2 # needed for pull_request so we can do HEAD^2

      - name: Get commit message
        id: get_commit_message
        run: |
          if   [[ '${{ github.event_name }}' == 'push' ]]; then
            echo ::set-output name=commit_message::$(git log --format=%B -n 1 HEAD)
          elif [[ '${{ github.event_name }}' == 'pull_request' ]]; then
            echo ::set-output name=commit_message::$(git log --format=%B -n 1 HEAD^2)
          fi

    outputs:
      commit_message:
        echo "${{ steps.get_commit_message.outputs.commit_message }}"

  smoke_test:
    # quick smoke tests
    if: >
      !contains(needs.initialise.outputs.commit_message, '[ci skip]') &&
      !contains(needs.initialise.outputs.commit_message, '[skip ci]')
    name: Fast smoke tests
    runs-on:  ${{ matrix.platform }}
    needs: [initialise]
    strategy:
       matrix:
         python-version: ['2.7', '3.5', '3.9', '3.10']
         platform: [ubuntu-latest, windows-latest]
         exclude:
           # skip this config, because it is slow
           - python-version: '2.7'
             platform: windows-latest
    steps:
      - uses: actions/checkout@v3.0.2

      - name: Set up Python
        uses: actions/setup-python@v2.3.2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python --version
          pip --version
          pip install wheel
          pip install "numpy==1.11 ; python_version == '3.5'"  # dirty fix for python3.5 which seem to doesn't understand reqs in setup.py
          pip install -r requirements.txt
          pip install -r tests/requirements-test.txt

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 --count --select=E9,F63,F7,F82 --show-source --statistics pytrip tests examples

      - name: Smoke tests
        run: |
          python -m pytest -k "smoke" tests/

  full_tests:
    # these full tests, being slow are triggered only in following cases:
    #  - if commit message contains specific keyword: [build]
    #  - if commit message starts with specific keyword: dependabot_ (for PRs created with dependabot)
    #  - on master branch
    #  - on release tags (named v*)
    if: >
      contains(needs.initialise.outputs.commit_message, '[build]') ||
      startsWith(needs.initialise.outputs.commit_message, 'dependabot_') ||
      github.ref == 'refs/heads/master' ||
      (github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v'))
    name: Full slow tests
    runs-on:  ${{ matrix.platform }}
    needs: [initialise, smoke_test]
    strategy:
      matrix:
        python-version: ['2.7', '3.5', '3.6', '3.7', '3.8', '3.9', '3.10']
        platform: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v3.0.2
    - name: Set up Python
      uses: actions/setup-python@v2.3.2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Visual C++ 9.0 for Python 2.7
      # we download from web.archive.org, because it is not accessible on official microsoft site
      # https://stackoverflow.com/questions/43645519/microsoft-visual-c-9-0-is-required
      if: matrix.platform == 'windows-latest' && matrix.python-version == '2.7'
      run: |
        C:\msys64\usr\bin\wget.exe --progress=dot:mega --tries=50 'https://web.archive.org/web/20200709160228if_/https://download.microsoft.com/download/7/9/6/796EF2E4-801B-4FC4-AB28-B59FBF6D907B/VCForPython27.msi'
        msiexec /i VCForPython27.msi /qn

    - name: Install dependencies
      run: |
        python --version
        pip --version
        pip install wheel
        pip install "numpy==1.11 ; python_version == '3.5'"  # dirty fix for python3.5 which seems to doesn't understand reqs in setup.py
        pip install -r requirements.txt
        pip install -r tests/requirements-test.txt

    - name: Regular tests
      run: |
         python -m pytest -k "not slow" tests/


  build_sdist:
    # this job is triggered only in following cases:
    #  - if commit message contains specific keyword: [build]
    #  - if commit message starts with specific keyword: dependabot_ (for PRs created with dependabot)
    #  - on master branch
    #  - on release tags (named v*)
    if: >
      contains(needs.initialise.outputs.commit_message, '[build]') ||
      startsWith(needs.initialise.outputs.commit_message, 'dependabot_') ||
      github.ref == 'refs/heads/master' ||
      (github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v'))
    name: Build sdist
    runs-on: ubuntu-latest
    needs: [initialise, full_tests]

    steps:
      - uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2.3.2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python --version
          python -m pip install --upgrade pip
          pip --version
          pip install -U setuptools

      - name: Build sdist
        run: |
          python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: ./dist/pytrip98*.tar.gz
          if-no-files-found: error

  build_wheels_manylinux1:
    # this job is triggered only in following cases:
    #  - if commit message contains specific keyword: [build]
    #  - if commit message starts with specific keyword: dependabot_ (for PRs created with dependabot)
    #  - on master branch
    #  - on release tags (named v*)
    if: >
      contains(needs.initialise.outputs.commit_message, '[build]') ||
      startsWith(needs.initialise.outputs.commit_message, 'dependabot_') ||
      github.ref == 'refs/heads/master' ||
      (github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v'))
    name: Wheels on Linux
    runs-on: ubuntu-latest
    needs: [initialise, full_tests]
    strategy:
       matrix:
         python-versions: ["cp27-cp27m", "cp35-cp35m", "cp36-cp36m", "cp37-cp37m","cp38-cp38", "cp39-cp39"]

    steps:
    - uses: actions/checkout@v3.0.2
      with:
       fetch-depth: 0

    - name: manylinux1 wheels
      # manylinux1 build has support for python versions up to 3.9
      uses: RalfG/python-wheels-manylinux-build@v0.4.2-manylinux1_x86_64
      with:
       python-versions: ${{ matrix.python-versions }}  # Python versions to target, space-separated

    - name: inspect packages to upload
      run: |
          ls -alh dist/

    - uses: actions/upload-artifact@v2
      with:
        path: ./dist/pytrip98*manylinux1_x86_64.whl
        if-no-files-found: error

  build_wheels_manylinux2010:
    # this job is triggered only in following cases:
    #  - if commit message contains specific keyword: [build]
    #  - if commit message starts with specific keyword: dependabot_ (for PRs created with dependabot)
    #  - on master branch
    #  - on release tags (named v*)
    if: >
      contains(needs.initialise.outputs.commit_message, '[build]') ||
      startsWith(needs.initialise.outputs.commit_message, 'dependabot_') ||
      github.ref == 'refs/heads/master' ||
      (github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v'))
    name: Wheels on Linux
    runs-on: ubuntu-latest
    needs: [initialise, full_tests]
    strategy:
       matrix:
         python-versions: ['cp310-cp310']

    steps:
    - uses: actions/checkout@v3.0.2
      with:
       fetch-depth: 0

    - name: manylinux2010 wheels
      # we use manylinux2010 as it is the oldest standard with support for python 3.10
      uses: RalfG/python-wheels-manylinux-build@v0.4.2-manylinux2010_x86_64
      with:
       python-versions: ${{ matrix.python-versions }}  # Python versions to target, space-separated

    - name: inspect packages to upload
      run: |
          ls -alh dist/

    - uses: actions/upload-artifact@v2
      with:
        path: ./dist/pytrip98*manylinux2010_x86_64.whl
        if-no-files-found: error


  build_wheels_macOS:
    # this job is triggered only in following cases:
    #  - if commit message contains specific keyword: [build]
    #  - if commit message starts with specific keyword: dependabot_ (for PRs created with dependabot)
    #  - on master branch
    #  - on release tags (named v*)
    if: >
      contains(needs.initialise.outputs.commit_message, '[build]') ||
      startsWith(needs.initialise.outputs.commit_message, 'dependabot_') ||
      github.ref == 'refs/heads/master' ||
      (github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v'))
    name: Wheels on macOS
    needs: [initialise, full_tests]
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2.3.2
        with:
          python-version: "3.9"

      - name: install dependencies
        run: |
          pip install --upgrade setuptools pip wheel
          pip install cibuildwheel

      - name: show environment
        run: |
          pip freeze

      - name: list target wheels
        run: |
          python -m cibuildwheel . --print-build-identifiers

      - name: build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD_VERBOSITY: "1"
          CIBW_BUILD: "cp36-* cp37-* cp38-* cp39-*"  # add MacOS 3.10 support

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
          if-no-files-found: error
   
  upload_wheels:
    # upload wheels only when git tag and release is created
    name: Upload wheels
    needs: [initialise, build_sdist, build_wheels_manylinux1, build_wheels_manylinux2010, build_wheels_macOS]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
              name: artifact
              path: dist

      - name: inspect packages to upload
        run: |
          ls -alh dist/
          
      - name: Publish packages to pypi
        uses: pypa/gh-action-pypi-publish@v1.5.0
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
        with:
              password: ${{ secrets.TWINE_PASSWORD }} # Password for your PyPI user or access token
              repository_url: "https://upload.pypi.org/legacy/" # The repository URL to use
              packages_dir: dist/ # The target directory for distribution
              verbose: true # Show verbose output


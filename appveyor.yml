# validation page for appveyor config: https://ci.appveyor.com/tools/validate-yaml

# Python3.5 needs VS 14.0 (2015)
os: Visual Studio 2015

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

build: off

# encrypting data done here: https://ci.appveyor.com/tools/encrypt
environment:
  PYPIPASS:
    secure: Mp6VITbi9PVEVoXqU4DMPQ==
  PYPIUSER: grzanka

  matrix:
#    # http://www.appveyor.com/docs/installed-software#python
#    - PYTHON_ROOT: "C:\\Python26"
#      PYTHON_ARCH: "32"
#      PYTHON_VERSION: "2.6.x"
#
#    - PYTHON_ROOT: "C:\\Python26-x64"
#      PYTHON_ARCH: "64"
#      PYTHON_VERSION: "2.6.x"
#
#    - PYTHON_ROOT: "C:\\Python27"
#      PYTHON_ARCH: "32"
#      PYTHON_VERSION: "2.7.x"
#
#    - PYTHON_ROOT: "C:\\Python27-x64"
#      PYTHON_ARCH: "64"
#      PYTHON_VERSION: "2.7.x"
#
#    - PYTHON_ROOT: "C:\\Python33"
#      PYTHON_ARCH: "32"
#      PYTHON_VERSION: "3.3.x"
#
#    - PYTHON_ROOT: "C:\\Python33-x64"
#      PYTHON_ARCH: "64"
#      PYTHON_VERSION: "3.3.x"
#
#    - PYTHON_ROOT: "C:\\Python34"
#      PYTHON_ARCH: "32"
#      PYTHON_VERSION: "3.4.x"
#
#    - PYTHON_ROOT: "C:\\Python34-x64"
#      PYTHON_ARCH: "64"
#      PYTHON_VERSION: "3.4.x"
#
    - PYTHON_ROOT: "C:\\Python35"
      PYTHON_ARCH: "32"
      PYTHON_VERSION: "3.5"

    - PYTHON_ROOT: "C:\\Python35-x64"
      PYTHON_ARCH: "64"
      PYTHON_VERSION: "3.5"



init:
# add Python interpreter to PATH variable
  - set PATH=%PYTHON_ROOT%;%PYTHON_ROOT%\Scripts;%PATH%
# set Miniconda path, 32 or 64 bit
  - set MINICONDAPATH=C:\Miniconda35
  - ps: If ($env:Platform -Match "x64") {$env:MINICONDAPATH="C:\Miniconda35-x64"}
# add Miniconda to PATH variable
  - set PATH=%MINICONDAPATH%\Scripts;%PATH%
# add Visual Studio compiler to PATH variable
  - dir "C:\Program Files (x86)\MSBuild"
  - dir "C:\Program Files\MSBuild"
  - dir "C:\Program Files\MSBuild\Microsoft"
  - SET PATH=C:\Program Files (x86)\MSBuild\14.0\Bin;%PATH%
# convenient name for Visual Studio Command Prompt tool
  - set VCVARSALL="C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat"
# following this one: https://github.com/audreyr/cookiecutter/issues/599
  - "git config --system http.sslcainfo \"C:\\Program Files\\Git\\mingw64\\ssl\\certs\\ca-bundle.crt\""
# check python version
  - python -V
# check 32 or 64 bit
  - "%PYTHON_ROOT%/python -c \"import struct;print(8 * struct.calcsize(\'P\'))\""

install:
# tell miniconda to always follow default answers
  - conda config --set always_yes yes --set changeps1 no
# update miniconda
  - conda update -q conda
# create new conda workspace and activate it
  - conda create -q --name python%PYTHON_VERSION% python=%PYTHON_VERSION%
  - activate python%PYTHON_VERSION%
# as scipy doesn't yet have wheels for windows, install it using conda
  - conda install -q --name python%PYTHON_VERSION% setuptools wheel scipy
# install usual requirements
  - pip install --upgrade -r tests/requirements-test.txt
  - pip install --upgrade -r requirements.txt
# check numpy & scipy versions
  - python -c "import numpy as np;print(np.version.version)"
  - python -c "import scipy as sp;print(sp.version.version)"
# check python version
  - python -V
# activate Visual Studio stuff
  - call %VCVARSALL% amd64

test_script:
# make wheel package
  - python setup.py bdist_wheel
# run tests
  - dir dist
  - cd dist
  - dir /B > tmp_req.txt
  - pip install -r tmp_req.txt
  - cd ..
  - py.test
# deploy package
  - bash appveyor\deploy_package.sh

# upload artifacts
artifacts:
  - path: dist\*whl